#!/bin/bash -l
# 1_read_assembly.job

### Queuing variables
#PBS -N 
#PBS -d 
#PBS -q fatnodes

#PBS -k oe
#PBS -m ae
#PBS -M 

### Use the script to assemble paired-end illumina 16S sequences. 
# This script requires that the sequences have been demultiplexed and 
# each sample file pair has the following format: 
#     sample_name-R1.fastq
#     sample_name-R2.fastq 
#     (where sample_name is the sample ID not containing any -'s or .'s)

### To run job enter:
# qsub 1_read_assembly.job

### Auxillary scripts and programs
# flash/1.2.7
# batch_rename.sh

### Load Modules
module load flash/1.2.7

### Environment variables ###
rawDir=`pwd`
scriptsDir=`find $HOME -path "*/Process_16S/Support_scripts"`
today=(`date`)
runName=`echo "process_16S_${today[2]}${today[1]}${today[5]}"`
read1s=(`ls *-R1.fastq`) # this makes a list of the appropriate read1 files
read2s=(`ls *-R2.fastq`) # this does the same for read2s and they should match in order
if [[ ${#read1s[@]} -eq 0 ]]; then 
	if [[ ${#read2s[@]} -eq 0 ]]; then
		echo -e "\tThere are no read files present in the directory using the proper naming convention" && \
		echo -e "\t(sample_name-R1.fastq, sample_name-R2.fastq)\n"
		# exit
	else
		echo -e "\tThere are no read 1 files present in the directory using the proper naming convention" && \
		echo -e "\t(sample_name-R1.fastq)\n"
		# exit
	fi
else
	if [[ ${#read2s[@]} -eq 0 ]]; then
	echo -e "\tThere are no read 2 files present in the directory using the proper naming convention" && \
	echo -e "\t(sample_name-R2.fastq)\n"
	# exit
	fi
fi


### Flash variables
flash_minOverlap=20 
flash_maxOverlap=150 # 247 min and max are what I used for PE250 reads of the V4 region, 20min, 150max for PE150 reads
flash_mismatch=0.25 # increasing this leads to more assemblies made, but increases error rate
flash_end=`expr ${#read1s[@]} - 1`
flash_outDir=01_Flash_m${flash_minOverlap}M${flash_maxOverlap}

##################################################################################

### Read assembly (flash)
mkdir $flash_outDir
for i in `seq 0 $flash_end`; do 
	name=`echo ${read1s[$i]} | cut -d '-' -f 1`
	flash -m $flash_minOverlap -M $flash_maxOverlap -x $flash_mismatch -o $flash_outDir/$name ${read1s[$i]} ${read2s[$i]}
done
echo "flash -m $flash_minOverlap -M $flash_maxOverlap -x $flash_mismatch -o $flash_outDir/{name} {read1s[i]} {read2s[i]}" >> $rawDir/$runName.log

cd $flash_outDir

### Clean up 
mkdir Flash_notCombined
mkdir Flash_histograms
mv *.notCombined*fastq Flash_notCombined
echo "mv \*.notCombined\*fastq Flash_notCombined" >> $rawDir/$runName.log
mv *.hist* Flash_histograms
echo "mv \*.hist\* Flash_histograms" >> $rawDir/$runName.log

$scriptsDir/batch_rename.sh "*extended*" extendedFrags joined
echo "$scriptsDir/batch_rename.sh \"*extended*\" extendedFrags joined" >> $rawDir/$runName.log

cd $rawDir
